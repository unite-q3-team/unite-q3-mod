#ifdef EVENT_ENUMS
	#define DECLARE_EVENT( ev ) ev
#endif

#ifdef EVENT_STRINGS
	#define DECLARE_EVENT( ev ) #ev
#endif

DECLARE_EVENT( EV_NONE ),

DECLARE_EVENT( EV_FOOTSTEP ),
DECLARE_EVENT( EV_FOOTSTEP_METAL ),
DECLARE_EVENT( EV_FOOTSPLASH ),
DECLARE_EVENT( EV_FOOTWADE ),
DECLARE_EVENT( EV_SWIM ),

DECLARE_EVENT( EV_STEP_4 ),
DECLARE_EVENT( EV_STEP_8 ),
DECLARE_EVENT( EV_STEP_12 ),
DECLARE_EVENT( EV_STEP_16 ),

DECLARE_EVENT( EV_FALL_SHORT ),
DECLARE_EVENT( EV_FALL_MEDIUM ),
DECLARE_EVENT( EV_FALL_FAR ),

DECLARE_EVENT( EV_JUMP_PAD ),				// boing sound at origin, jump sound on player

DECLARE_EVENT( EV_JUMP ),
DECLARE_EVENT( EV_WATER_TOUCH ),			// foot touches
DECLARE_EVENT( EV_WATER_LEAVE ),			// foot leaves
DECLARE_EVENT( EV_WATER_UNDER ),			// head touches
DECLARE_EVENT( EV_WATER_CLEAR ),			// head leaves

DECLARE_EVENT( EV_ITEM_PICKUP ),			// normal item pickups are predictable
DECLARE_EVENT( EV_GLOBAL_ITEM_PICKUP ),		// powerup / team sounds are broadcast to everyone

DECLARE_EVENT( EV_NOAMMO ),
DECLARE_EVENT( EV_CHANGE_WEAPON ),
DECLARE_EVENT( EV_FIRE_WEAPON ),

DECLARE_EVENT( EV_USE_ITEM0 ),
DECLARE_EVENT( EV_USE_ITEM1 ),
DECLARE_EVENT( EV_USE_ITEM2 ),
DECLARE_EVENT( EV_USE_ITEM3 ),
DECLARE_EVENT( EV_USE_ITEM4 ),
DECLARE_EVENT( EV_USE_ITEM5 ),
DECLARE_EVENT( EV_USE_ITEM6 ),
DECLARE_EVENT( EV_USE_ITEM7 ),
DECLARE_EVENT( EV_USE_ITEM8 ),
DECLARE_EVENT( EV_USE_ITEM9 ),
DECLARE_EVENT( EV_USE_ITEM10 ),
DECLARE_EVENT( EV_USE_ITEM11 ),
DECLARE_EVENT( EV_USE_ITEM12 ),
DECLARE_EVENT( EV_USE_ITEM13 ),
DECLARE_EVENT( EV_USE_ITEM14 ),
DECLARE_EVENT( EV_USE_ITEM15 ),

DECLARE_EVENT( EV_ITEM_RESPAWN ),
DECLARE_EVENT( EV_ITEM_POP ),
DECLARE_EVENT( EV_PLAYER_TELEPORT_IN ),
DECLARE_EVENT( EV_PLAYER_TELEPORT_OUT ),

DECLARE_EVENT( EV_GRENADE_BOUNCE ),			// eventParm will be the soundindex

DECLARE_EVENT( EV_GENERAL_SOUND ),
DECLARE_EVENT( EV_GLOBAL_SOUND ),			// no attenuation
DECLARE_EVENT( EV_GLOBAL_TEAM_SOUND ),

DECLARE_EVENT( EV_BULLET_HIT_FLESH ),
DECLARE_EVENT( EV_BULLET_HIT_WALL ),

DECLARE_EVENT( EV_MISSILE_HIT ),
DECLARE_EVENT( EV_MISSILE_MISS ),
DECLARE_EVENT( EV_MISSILE_MISS_METAL ),
DECLARE_EVENT( EV_RAILTRAIL ),
DECLARE_EVENT( EV_SHOTGUN ),
DECLARE_EVENT( EV_BULLET ),					// otherEntity is the shooter

DECLARE_EVENT( EV_PAIN ),
DECLARE_EVENT( EV_DEATH1 ),
DECLARE_EVENT( EV_DEATH2 ),
DECLARE_EVENT( EV_DEATH3 ),
DECLARE_EVENT( EV_OBITUARY ),

DECLARE_EVENT( EV_POWERUP_QUAD ),
DECLARE_EVENT( EV_POWERUP_BATTLESUIT ),
DECLARE_EVENT( EV_POWERUP_REGEN ),

DECLARE_EVENT( EV_GIB_PLAYER ),				// gib a previously living player
DECLARE_EVENT( EV_SCOREPLUM ),				// score plum

//#ifdef MISSIONPACK
DECLARE_EVENT( EV_PROXIMITY_MINE_STICK ),
DECLARE_EVENT( EV_PROXIMITY_MINE_TRIGGER ),
DECLARE_EVENT( EV_KAMIKAZE ),				// kamikaze explodes
DECLARE_EVENT( EV_OBELISKEXPLODE ),			// obelisk explodes
DECLARE_EVENT( EV_OBELISKPAIN ),			// obelisk is in pain
DECLARE_EVENT( EV_INVUL_IMPACT ),			// invulnerability sphere impact
DECLARE_EVENT( EV_JUICED ),					// invulnerability juiced effect
DECLARE_EVENT( EV_LIGHTNINGBOLT ),			// lightning bolt bounced of invulnerability sphere
//endif

DECLARE_EVENT( EV_DEBUG_LINE ),
DECLARE_EVENT( EV_STOPLOOPINGSOUND ),
DECLARE_EVENT( EV_TAUNT ),
DECLARE_EVENT( EV_TAUNT_YES ),
DECLARE_EVENT( EV_TAUNT_NO ),
DECLARE_EVENT( EV_TAUNT_FOLLOWME ),
DECLARE_EVENT( EV_TAUNT_GETFLAG ),
DECLARE_EVENT( EV_TAUNT_GUARDBASE ),
DECLARE_EVENT( EV_TAUNT_PATROL )

#ifdef EVENT_ENUMS
	, DECLARE_EVENT( EV_MAX )
#endif

#undef DECLARE_EVENT
